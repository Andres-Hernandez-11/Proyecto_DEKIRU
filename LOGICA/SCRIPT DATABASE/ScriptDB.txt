-- CREACIÓN DE BASE DE DATOS
CREATE DATABASE IF NOT EXISTS DekiruDb;
USE DekiruDb;

-- 1. RECURSOS HUMANOS
CREATE TABLE EMPLEADO (
    id_empleado INT AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(100),
apellido VARCHAR(100),
cargo VARCHAR(100),
salario DECIMAL(10,2),
fecha_contratacion DATE,
estado VARCHAR(20)
);

CREATE TABLE NOMINA (
    id_nomina INT AUTO_INCREMENT PRIMARY KEY,
id_empleado INT NOT NULL,
salario_base DECIMAL(10,2),
fecha_pago DATE,
FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado) ON DELETE CASCADE
);

-- 2. CLIENTES
CREATE TABLE CLIENTE (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(100),
apellido VARCHAR(100),
documento VARCHAR(20) UNIQUE,
telefono VARCHAR(20),
email VARCHAR(100)
);

CREATE TABLE HISTORIAL_VIAJES (
    id_historial INT AUTO_INCREMENT PRIMARY KEY,
id_cliente INT NOT NULL,
fecha_viaje DATE,
origen VARCHAR(100),
destino VARCHAR(100),
costo DECIMAL(10,2),
FOREIGN KEY (id_cliente) REFERENCES CLIENTE(id_cliente) ON DELETE CASCADE
);

-- 3. INVENTARIOS
CREATE TABLE PRODUCTO (
    id_producto INT AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(100),
categoria VARCHAR(50),
descripcion TEXT,
stock INT,
precio_unitario DECIMAL(10,2)
);

CREATE TABLE PROVEEDOR (
    id_proveedor INT AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(100),
contacto VARCHAR(100),
telefono VARCHAR(20),
email VARCHAR(100)
);

-- 4. CONTABILIDAD
CREATE TABLE CUENTA_CONTABLE (
    id_cuenta INT AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(100),
tipo VARCHAR(50),
saldo_actual DECIMAL(15,2)
);

CREATE TABLE TRANSACCION (
    id_transaccion INT AUTO_INCREMENT PRIMARY KEY,
id_cuenta INT NOT NULL,
tipo_transaccion VARCHAR(50),
monto DECIMAL(15,2),
fecha DATE,
descripcion TEXT,
FOREIGN KEY (id_cuenta) REFERENCES CUENTA_CONTABLE(id_cuenta) ON DELETE CASCADE
);


-- 5. Usuario inicio de sesion
CREATE TABLE USUARIO (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(100) NOT NULL,
apellido VARCHAR(100) NOT NULL,
correo VARCHAR(100) UNIQUE NOT NULL,
usuario VARCHAR(50) UNIQUE NOT NULL,
contrasena VARCHAR(255) NOT NULL, -- Recomendable almacenar contraseñas encriptadas
rol_id INT
);


-- 6. VENTAS/COMPRAS (Ajustado para solo vender tiquetes)
CREATE TABLE VENTA (
    id_venta INT AUTO_INCREMENT PRIMARY KEY,
id_cliente INT NOT NULL,
id_empleado INT DEFAULT NULL,
fecha DATE NOT NULL,
origen VARCHAR(100) NOT NULL,
destino VARCHAR(100) NOT NULL,
total DECIMAL(10,2) NOT NULL,
metodo_pago VARCHAR(50) NOT NULL,
FOREIGN KEY (id_cliente) REFERENCES CLIENTE(id_cliente) ON DELETE CASCADE,
FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado) ON DELETE SET NULL
);

CREATE TABLE COMPRA (
    id_compra INT AUTO_INCREMENT PRIMARY KEY,
id_proveedor INT NOT NULL,
fecha DATE NOT NULL,
total DECIMAL(10,2) NOT NULL,
FOREIGN KEY (id_proveedor) REFERENCES PROVEEDOR(id_proveedor) ON DELETE CASCADE
);

CREATE TABLE DETALLE_COMPRA (
    id_detalle INT AUTO_INCREMENT PRIMARY KEY,
id_compra INT NOT NULL,
id_producto INT NOT NULL,
cantidad INT NOT NULL,
precio_unitario DECIMAL(10,2) NOT NULL,
subtotal DECIMAL(10,2) NOT NULL,
FOREIGN KEY (id_compra) REFERENCES COMPRA(id_compra) ON DELETE CASCADE,
FOREIGN KEY (id_producto) REFERENCES PRODUCTO(id_producto) ON DELETE CASCADE
);

-- MOVIMIENTOS DE INVENTARIO
CREATE TABLE MOVIMIENTO_INVENTARIO (
    id_movimiento INT AUTO_INCREMENT PRIMARY KEY,
id_producto INT NOT NULL,
tipo_movimiento ENUM('entrada', 'salida') NOT NULL,
cantidad INT NOT NULL,
fecha DATE NOT NULL,
id_empleado INT DEFAULT NULL,
observaciones TEXT,
FOREIGN KEY (id_producto) REFERENCES PRODUCTO(id_producto) ON DELETE CASCADE,
FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado) ON DELETE SET NULL
);

-- RELACIONES ENTRE MÓDULOS
ALTER TABLE NOMINA ADD CONSTRAINT fk_nomina_transaccion FOREIGN KEY (id_nomina) REFERENCES TRANSACCION(id_transaccion) ON DELETE CASCADE;
ALTER TABLE VENTA ADD CONSTRAINT fk_venta_transaccion FOREIGN KEY (id_venta) REFERENCES TRANSACCION(id_transaccion) ON DELETE CASCADE;
ALTER TABLE COMPRA ADD CONSTRAINT fk_compra_transaccion FOREIGN KEY (id_compra) REFERENCES TRANSACCION(id_transaccion) ON DELETE CASCADE;
ALTER TABLE MOVIMIENTO_INVENTARIO ADD CONSTRAINT fk_mov_inv_empleado FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado) ON DELETE SET NULL;